{"ast":null,"code":"var _jsxFileName = \"/Users/idessit-michael/Desktop/Test App/client/src/components/Modal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Modal = ({\n  product,\n  openModal,\n  setOpenModal,\n  saveProduct\n}) => {\n  _s();\n  // Local state for the name and description\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  // When the modal is opened, set the product's name and description in the form\n  useEffect(() => {\n    if (product) {\n      setName(product.name);\n      setDescription(product.description);\n    }\n  }, [product]);\n\n  // Handle saving the product (update the product and close the modal)\n  const handleSave = () => {\n    saveProduct({\n      ...product,\n      name,\n      description\n    });\n    setOpenModal(false); // Close modal after saving\n  };\n\n  // Handle going back (close modal without saving)\n  const handleBack = () => {\n    setOpenModal(false); // Close modal without saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Product Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Enter product name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Product Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"description\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Enter product description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleBack,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Modal, \"8DlSI880sm0bBDXV0NTL10X28kU=\");\n_c = Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Modal","product","openModal","setOpenModal","saveProduct","_s","name","setName","description","setDescription","handleSave","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/idessit-michael/Desktop/Test App/client/src/components/Modal.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const Modal = ({ product, openModal, setOpenModal, saveProduct }) => {\n    // Local state for the name and description\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n\n    // When the modal is opened, set the product's name and description in the form\n    useEffect(() => {\n        if (product) {\n            setName(product.name);\n            setDescription(product.description);\n        }\n    }, [product]);\n\n    // Handle saving the product (update the product and close the modal)\n    const handleSave = () => {\n        saveProduct({ ...product, name, description });\n        setOpenModal(false); // Close modal after saving\n    };\n\n    // Handle going back (close modal without saving)\n    const handleBack = () => {\n        setOpenModal(false); // Close modal without saving\n    };\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-content\">\n                <h3>Edit Product</h3>\n                <form>\n                    <div>\n                        <label htmlFor=\"name\">Product Name</label>\n                        <input\n                            type=\"text\"\n                            id=\"name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                            placeholder=\"Enter product name\"\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"description\">Product Description</label>\n                        <input\n                            type=\"text\"\n                            id=\"description\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                            placeholder=\"Enter product description\"\n                        />\n                    </div>\n                    <div className=\"modal-buttons\">\n                        <button type=\"button\" onClick={handleBack}>Back</button>\n                        <span></span>\n                        <button type=\"button\" onClick={handleSave}>Save</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC,YAAY;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxE;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACZ,IAAII,OAAO,EAAE;MACTM,OAAO,CAACN,OAAO,CAACK,IAAI,CAAC;MACrBG,cAAc,CAACR,OAAO,CAACO,WAAW,CAAC;IACvC;EACJ,CAAC,EAAE,CAACP,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBN,WAAW,CAAC;MAAE,GAAGH,OAAO;MAAEK,IAAI;MAAEE;IAAY,CAAC,CAAC;IAC9CL,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;;EAED;EACA,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrBR,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,oBACIJ,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,eAClBd,OAAA;MAAKa,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1Bd,OAAA;QAAAc,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBlB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAOmB,OAAO,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC1ClB,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,MAAM;YACTC,KAAK,EAAEf,IAAK;YACZgB,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCI,WAAW,EAAC;UAAoB;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNlB,OAAA;UAAAc,QAAA,gBACId,OAAA;YAAOmB,OAAO,EAAC,aAAa;YAAAL,QAAA,EAAC;UAAmB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxDlB,OAAA;YACIoB,IAAI,EAAC,MAAM;YACXC,EAAE,EAAC,aAAa;YAChBC,KAAK,EAAEb,WAAY;YACnBc,QAAQ,EAAGC,CAAC,IAAKd,cAAc,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,WAAW,EAAC;UAA2B;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNlB,OAAA;UAAKa,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1Bd,OAAA;YAAQoB,IAAI,EAAC,QAAQ;YAACO,OAAO,EAAEf,UAAW;YAAAE,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxDlB,OAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACblB,OAAA;YAAQoB,IAAI,EAAC,QAAQ;YAACO,OAAO,EAAEhB,UAAW;YAAAG,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACZ,EAAA,CA1DWL,KAAK;AAAA2B,EAAA,GAAL3B,KAAK;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}