{"ast":null,"code":"var _jsxFileName = \"/Users/idessit-michael/Desktop/Test App/client/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport ProductBox from '../components/ProductBox';\nimport AddProduct from '../components/AddProduct';\nimport EditProduct from '../components/EditProduct';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [products, setProducts] = useState(null);\n  const [showModal, setShowModal] = useState(null);\n  const [selectedProductId, setSelectedProductId] = useState(null);\n  const fetchProducts = async () => {\n    const response = await fetch('/api/product');\n    const json = await response.json();\n    if (response.ok) {\n      setProducts(json);\n    }\n  };\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const openEditModal = productId => {\n    setSelectedProductId(productId);\n    setShowModal(true);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    setSelectedProductId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(ProductBox, {\n        product: product,\n        fetchProducts: fetchProducts,\n        openEditModal: openEditModal\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddProduct, {\n      fetchProducts: fetchProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: closeModal,\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(EditProduct, {\n          productId: selectedProductId // Pass productId to EditProduct\n          ,\n          fetchProducts: fetchProducts // Optional, if you want to refresh after update\n          ,\n          closeModal: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"LOo1lSIV5Jg6g8CULiqcxZzp49Y=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","ProductBox","AddProduct","EditProduct","jsxDEV","_jsxDEV","Home","_s","products","setProducts","showModal","setShowModal","selectedProductId","setSelectedProductId","fetchProducts","response","fetch","json","ok","openEditModal","productId","closeModal","className","children","map","product","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/idessit-michael/Desktop/Test App/client/src/pages/Home.js"],"sourcesContent":["import { useEffect, useState} from 'react'\n\nimport ProductBox from '../components/ProductBox'\nimport AddProduct from '../components/AddProduct'\nimport EditProduct from '../components/EditProduct'\n\nconst Home = () => {\n\n    const [products, setProducts] = useState(null)\n    const [showModal, setShowModal] = useState(null)\n    const [selectedProductId, setSelectedProductId] = useState(null)\n\n    const fetchProducts = async () => {\n        const response = await fetch('/api/product');\n        const json = await response.json();\n\n        if (response.ok) {\n            setProducts(json); \n        }\n    };\n\n    useEffect(() => {\n        fetchProducts();\n    }, []);\n\n    const openEditModal = (productId) => {\n        setSelectedProductId(productId);\n        setShowModal(true);\n    };\n\n    const closeModal = () => {\n        setShowModal(false);\n        setSelectedProductId(null);\n    }\n\n    return(\n        <div className=\"home\">\n            <div className=\"products\">\n                {products && products.map((product) => (\n                    <ProductBox\n                    key={product._id}\n                    product={product}\n                    fetchProducts={fetchProducts}\n                    openEditModal={openEditModal} \n                />\n                ))}\n            </div>\n            <AddProduct fetchProducts={fetchProducts}/>\n            {showModal && (\n                <div className=\"modal\">\n                    <div className=\"modal-content\">\n                        <button className=\"close\" onClick={closeModal}>X</button>\n                        <EditProduct\n                            productId={selectedProductId} // Pass productId to EditProduct\n                            fetchProducts={fetchProducts} // Optional, if you want to refresh after update\n                            closeModal={closeModal} \n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}